version: '3'

networks:
  bridge:
    driver: bridge

services:
  zookeeper:
    image: zookeeper:latest
    hostname: zookeeper
    restart: always
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
    networks:
      bridge:
        aliases:
          - zookeeper

  kafka:
    image: wurstmeister/kafka:latest
    restart: always
    hostname: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 0.0.0.0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      JMX_PORT: 9999
    networks:
      bridge:
        aliases:
          - kafka
  
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    ports:
      - 9000:9000
    networks:
      - bridge

  jobmanager:
    image: flink:latest
    expose:
      - "6123"
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
      bridge:
        aliases:
          - jobmanager
    
  taskmanager:
    image: flink:latest
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
      bridge:
        aliases:
          - taskmanager
  
  producer:
    build: eventproc
    image: producer:latest
    environment:
      INPUT_FILE: "/data/events.json"
      KAFKA_PRODUCER_ITERATIONS: 10
    depends_on:
      - kafka
    networks:
      bridge:
        aliases:
          - producer
